using System;
using System.Text;
using System.Collections.Generic;
using System.Security.Cryptography.X509Certificates;
using FreieWahl.Security.Signing.Buergerkarte;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace Test.FreieWahl.Security.Signing.Buergerkarte
{
    /// <summary>
    /// Summary description for Test_BuergerkarteSigning
    /// </summary>
    [TestClass]
    public class Test_BuergerkarteSigning
    {
        [TestMethod]
        public void TestBuergerkarteSignature()
        {
            X509Certificate2 cert = new X509Certificate2();
            var buergerkarteRootCa5 =
                "MIIFyTCCA7GgAwIBAgIDD820MA0GCSqGSIb3DQEBCwUAMIGLMQswCQYDVQQGEwJBVDFIMEYGA1UECgw/QS1UcnVzdCBHZXMuIGYuIFNpY2hlcmhlaXRzc3lzdGVtZSBpbSBlbGVrdHIuIERhdGVudmVya2VociBHbWJIMRgwFgYDVQQLDA9BLVRydXN0LVJvb3QtMDUxGDAWBgNVBAMMD0EtVHJ1c3QtUm9vdC0wNTAeFw0xMzA5MjMxMzI0MTFaFw0yMzA5MjAxMTI0MTFaMIGLMQswCQYDVQQGEwJBVDFIMEYGA1UECgw/QS1UcnVzdCBHZXMuIGYuIFNpY2hlcmhlaXRzc3lzdGVtZSBpbSBlbGVrdHIuIERhdGVudmVya2VociBHbWJIMRgwFgYDVQQLDA9BLVRydXN0LVJvb3QtMDUxGDAWBgNVBAMMD0EtVHJ1c3QtUm9vdC0wNTCCAiAwDQYJKoZIhvcNAQEBBQADggINADCCAggCggIBAOT7jFImpWeBhGjdgsnNqHIBWSI/JOkSpJKXxVDO8kU/a0QFGLp7ca/mjbtt9uTz5dy85HgTI7IKRJ23vTdA1iVEUInOaNLDYqdEoSNFr18GcXZG4Wn/4iHgP88yleqIJqcgrMJxXTDJDOxELc7FZXzXB3419g0YFk17q/OqD33e6IyULpPQt25IOMQCIhrfIKWCY79T1UQVBjukO3rctu6Qi0ACtJ/A9nEzWaYi07BoIz/9hMiWsPlwSy80hv0lVZnRzXcnOMRtXBnq634ThgGgEEAmRx++FL5fpbg/YKFu4SGOEyV4Lqd6zVivflusP84Ps/JXfNV7bcnT/K2VrRu/h5hPJ+YLqWg75Cws9RRH16ldgvbim7cg4eUaayx4CI1sdYzqN5aJnVnpdDIvGDAYOgQlSwbtxmdnJoBqX4F3MB6e0XSPX4zAVGrspBhhmXod+Z356Pnx73K+zi8ZknzjKK/RuLhv0GC+eFikLjc6sieJEVGiXom8HcxXZUtJTBMQAq5Xvkwh8SKqHqCS1FQsuJt8M2gnECodS/8GCgKTgIcZr7+ogxIQjn0QpSuQ6A7gFIZF9tflVnOWH4+ePCqjGl4skGaFbwF2vbPwKcgniqmpI7DV8vDK1b22MnDMLxxZv+rDBqRg36uJbkcU74WQa2gjlk4G07EnowPDudm9AgEDozYwNDAPBgNVHRMBAf8EBTADAQH/MBEGA1UdDgQKBAhA+blnvgPSCDAOBgNVHQ8BAf8EBAMCAQYwDQYJKoZIhvcNAQELBQADggIBAOIqZcZrWivIqDTLlxEdJh+jss64PCshn5j0Fx8NtnuuyxBtg/JjwYiu6cBSQq43nwuZV1LoRX6YlOkpR5/xB8FCCPNzPKprNbNsFSuRMRvkfpLnw8WmITjfG77Rn5YNULb1e5SjLaqvt43SOy18ghDUakrJYaOmj6eyoNlUw5d/0YnMY/jZ3zhYlboBUMwK84tJPH8/PajzaMzHmNPZNTD3DoJe+BBhrrxO8Cs0eqKa9tuNr+sDTCfD3q5s3VUUrz8d64+atnhJ7rz5HndgAiTc3t7ppfuRphx6skng978dB66Gy7vZANfLARjv6MOPDAcwcFjB8mPqjP22rePoBzw9WwWHdMs15e8Jt7ughGm8QXFj2zKcQeFfftp2bZOjroX65YzJUqwny2CzNixJqQTeuCcrCTHEkpPpjNGkS/2+VlGw2LfOnUXDG0gv0bMw935cqVsxP+UFm+F2qdf1KYZzVxy9L9vXGRb0JTTxgxa0MlgLsVlO44vQoyuLG0DC9+NSqE5K7nXp7WOZGwb7MI38HleZ7M4UKOOgjS3r7wceDAKOjEjMiNqmrXmUtKzpDDC2/wY7FHGVhfuwesuLSFly21AA8reNeSvNBJWSdUkCllSiHVSFu2CvfX2qs735cDxZesGB/KxQABgS5LXcXdilWF4dXydpjszb76pXGquE";
            var certRaw = System.Convert.FromBase64String(buergerkarteRootCa5);
            cert.Import(certRaw);
            SignatureHandler s = new SignatureHandler(new[] { cert });

            string signedData =
                    "MIIIjwYJKoZIhvcNAQcCoIIIgDCCCHwCAQExDzANBglghkgBZQMEAgEFADAqBgkqhkiG9w0BBwGgHQQbSWNoIGJpbiBlaW4gZWluZmFjaGVyIFRleHQuoIIFrDCCBagwggOQoAMCAQICBG7kadMwDQYJKoZIhvcNAQELBQAwgZ0xCzAJBgNVBAYTAkFUMUgwRgYDVQQKDD9BLVRydXN0IEdlcy4gZi4gU2ljaGVyaGVpdHNzeXN0ZW1lIGltIGVsZWt0ci4gRGF0ZW52ZXJrZWhyIEdtYkgxITAfBgNVBAsMGGEtc2lnbi1wcmVtaXVtLW1vYmlsZS0wNTEhMB8GA1UEAwwYYS1zaWduLXByZW1pdW0tbW9iaWxlLTA1MB4XDTE3MDcyMDIwMTMyMVoXDTIyMDcyMDIwMTMyMVowdDELMAkGA1UEBhMCQVQxITAfBgNVBAMMGE1pY2hhZWwgUGV0ZXIgRmFzY2hpbmdlcjETMBEGA1UEBAwKRmFzY2hpbmdlcjEWMBQGA1UEKgwNTWljaGFlbCBQZXRlcjEVMBMGA1UEBRMMNzAyNTgxMjY0ODI4MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE+80hgto9BuMUrjbj6oBAsm5TFeKG+iNKizf6AR7uHi78DlEhlRi6iLmwTjKWNRaax/zbKtQLp4HSiEsJ7JLkzaOCAeEwggHdMH0GCCsGAQUFBwEBBHEwbzBEBggrBgEFBQcwAoY4aHR0cDovL3d3dy5hLXRydXN0LmF0L2NlcnRzL2Etc2lnbi1wcmVtaXVtLW1vYmlsZS0wNS5jcnQwJwYIKwYBBQUHMAGGG2h0dHA6Ly9vY3NwLmEtdHJ1c3QuYXQvb2NzcDATBgNVHSMEDDAKgAhI8/2cIw6HdzByBggrBgEFBQcBAwRmMGQwCgYIKwYBBQUHCwIwCAYGBACORgEBMAgGBgQAjkYBBDATBgYEAI5GAQYwCQYHBACORgEGATAtBgYEAI5GAQUwIzAhFhtodHRwczovL3d3dy5hLXRydXN0LmF0L3Bkcy8TAkVOMBEGA1UdDgQKBAhCFwes+ImpnDAOBgNVHQ8BAf8EBAMCBsAwCQYDVR0TBAIwADBgBgNVHSAEWTBXMAgGBgQAizABATBLBgYqKAARARQwQTA/BggrBgEFBQcCARYzaHR0cDovL3d3dy5hLXRydXN0LmF0L2RvY3MvY3AvYS1zaWduLXByZW1pdW0tbW9iaWxlMEMGA1UdHwQ8MDowOKA2oDSGMmh0dHA6Ly9jcmwuYS10cnVzdC5hdC9jcmwvYS1zaWduLXByZW1pdW0tbW9iaWxlLTA1MA0GCSqGSIb3DQEBCwUAA4ICAQAF0hzqvK3HOh5dQlrvLd//k5xHSO7kUycUEH/ilBXsCByck0I7IkwaSN7JiWumNmyaJ+8o9ypOx62Aw1bHZTqh2LJMKWFS/QkywDgxSMu36JuvoRljqJLpBY8QjwZtr1Adp0sDiTxozgheIWQosCOcPGeFu2XH304t2W3Udl+dJFWcWaDteENUkqOkZBDEoqBBPB5xGdRpFj0qQcbCujMZzOKQeSsWj6uInIyqu8m0KBE0V/au/jMhDAnaMAn9+ZHWbJ3JIgPnV8oZSD9KuIONWy8Q3SB3+qZsbxkJjHPYdc+OPTKMc3bTnaLy4u6VfAbGqVbXnaUQGin4498vG5cGJbwwNDT/T66XNJQ8aX+kGxwDI8fHvpfVIlp0JkkEBq1Xtf2d2AF9eT2tFfGHHEwh1YVH0lj2K9xhroNtZItuAgUhJ0eqjNF7qt3Bq2kxAuPk9V2Xj8+61nvybDPMpIuI8M5x+LUc1s7zycq5vsjQ7ljPqel875ria0EyClSC//FAOFnj+of7MMyhHHMIDncB7/A3+RkEVF32DdAbSOI7jbhVz35scTuuXEPlDRwkd4I5znR24JHF2UXgd6bEwIDeTX4A7NA4q9RZRdCWUgKwPXX8+bChsYAejgNCTsieMGHTR8LK1UMtnUDE4g2LGAVGbLOwLpBruVQbfG6Xr7kWHjGCAogwggKEAgEBMIGmMIGdMQswCQYDVQQGEwJBVDFIMEYGA1UECgw/QS1UcnVzdCBHZXMuIGYuIFNpY2hlcmhlaXRzc3lzdGVtZSBpbSBlbGVrdHIuIERhdGVudmVya2VociBHbWJIMSEwHwYDVQQLDBhhLXNpZ24tcHJlbWl1bS1tb2JpbGUtMDUxITAfBgNVBAMMGGEtc2lnbi1wcmVtaXVtLW1vYmlsZS0wNQIEbuRp0zANBglghkgBZQMEAgEFAKCCAW4wLwYJKoZIhvcNAQkEMSIEIHJOQnykSeieMe2LrD9i5iV0QaN7BaEoEwl5bo2DUhbyMBwGCSqGSIb3DQEJBTEPFw0xODA3MDgyMzAwMjhaMBYGBgQAjUUCATEMDAp0ZXh0L3BsYWluMBgGCSqGSIb3DQEJAzELBgkqhkiG9w0BBwEwgeoGCyqGSIb3DQEJEAIvMYHaMIHXMIHUMIHRBCAENbd3W3blhdbuVRkJ8ilN6CQJHNDQSoN56p1Hl04NxDCBrDCBo6SBoDCBnTELMAkGA1UEBhMCQVQxSDBGBgNVBAoMP0EtVHJ1c3QgR2VzLiBmLiBTaWNoZXJoZWl0c3N5c3RlbWUgaW0gZWxla3RyLiBEYXRlbnZlcmtlaHIgR21iSDEhMB8GA1UECwwYYS1zaWduLXByZW1pdW0tbW9iaWxlLTA1MSEwHwYDVQQDDBhhLXNpZ24tcHJlbWl1bS1tb2JpbGUtMDUCBG7kadMwDAYIKoZIzj0EAwIFAARHMEUCIA68Osci35X1ArDAHBJco/fYPPg57t7J2gf+pRoc+8QKAiEA5yHoDCOUTpmfrDlu27/eJ/MUnvNF3BDb323TqUzrbtU=";
            string data = "Ich bin ein einfacher Text.";
            var content = s.GetSignedContent(signedData);
            Assert.AreEqual(data, content.Data);
            Assert.AreEqual("Michael Peter Faschinger", content.SigneeName);
            Assert.AreEqual("702581264828", content.SigneeId);
            Assert.AreEqual(cert, content.RootCertificate);
        }
    }
}
