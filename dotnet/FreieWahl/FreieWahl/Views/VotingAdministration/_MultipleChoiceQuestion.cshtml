@using System.Web
@using FreieWahl.Voting.Models
@model FreieWahl.Models.VotingAdministration.QuestionModel

<div class="card my-4 questionCard @(Model.Status == QuestionStatus.OpenForVoting ? "questionCardInactive" : "")" data-questionid="@Model.Index" data-x="@Model.Status.ToString()">
    <div class="card-header bg-primary text-light pb-0 pt-1" style="font-size:2.5rem; font-weight: 100;line-height: 2.5rem">
        <div class="py-2 float-left">Multiple Choice</div>
        @if (Model.Status == QuestionStatus.InPreparation)
        {
            <div class="btn-group dropleft float-right">
                <a class="nav-link" href="#" id="question-@Model.Index-menu" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="material-icons text-white" style="font-size: 2.5rem">more_vert</i>
                </a>
                <div class="dropdown-menu" aria-labelledby="question-@Model.Index-menu">
                    <button class="dropdown-item" type="button" onclick='editQuestion(@Json.Serialize(Model))'>Bearbeiten</button>
                    <button class="dropdown-item" type="button" onclick="deleteQuestion('@Model.VotingId', @Model.Index)">Frage löschen</button>
                </div>
            </div>
        }
    </div>
    <div class="card-body">
        <h1 class="card-title" style="border-bottom: 1px solid #657F8C" id="question-@Model.Index-title">@Model.Text</h1>
        <p class="card-text border-bottom" id="question-@Model.Index-description">@Model.Description</p>
        <div class="container">
            <div class="row" id="question-@Model.Index-answers">
                <div class="col-lg-6 col-12">
                    @{ int answerCount = 0; }
                    @foreach (var option in @Model.AnswerOptions)
                    {
                        <label style="display: block; position: relative; padding-left: 35px; margin-bottom: 12px;">
                            <span id="fw-answer-title-@Model.Index-@answerCount">
                                @option.Answer
                            </span>
                            @if (!string.IsNullOrEmpty(@option.Description))
                            {<br />
                                <span class="small text-primary border-bottom" id="fw-answer-description-@Model.Index-@answerCount">
                                    @option.Description
                                </span>
                            }
                            <input type="checkbox" style="position: absolute; opacity: 0;"><span style="position: absolute; top: 0; left: 0; height: 23px; width: 23px; background-color: #eee; border: 3px solid #657f8C"></span>
                        </label>
                        answerCount++;
                    }
                </div>
            </div>
        </div>
        @if (Model.Status == QuestionStatus.InPreparation)
        {
            <button class="btn btn-success float-right mx-3 fwBtnUnlockQuestion" data-questionid="@Model.Index">Freischalten</button>
        }
        else if (Model.Status == QuestionStatus.OpenForVoting)
        {
            <div class="w-100 bg-light text-dark p-1 border"><small>Diese Frage ist für die WählerInnen freigeschaltet und kann nicht mehr bearbeitet werden.</small></div>
            <div class="container">
                <div class="row justify-content-between align-items-center mt-2">
                    <div class="col-12 col-lg-8 col-md-6">
                        <div class="progress questionProgress w-100 mt-1 d-none" style="height: 1rem;" data-questionid="@Model.Index">
                            <div class="progress-bar pl-2" role="progressbar" style="width: 0%;color:black" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                    </div>
                    <div class="col-6 col-lg-3">
                        <button class="btn btn-secondary float-right fwBtnLockQuestion">Abschließen</button>
                    </div>
                </div>
            </div>
        }
        else if (Model.Status == QuestionStatus.Locked)
        {
            <p>
                <button class="btn btn-secondary w-100" type="button" data-toggle="collapse" data-target="#result-dropdown-@Model.Index" aria-expanded="false" aria-controls="collapseExample" onClick="loadQuestionResults('@Model.VotingId', @Model.Index)">
                    Ergebnisse anzeigen
                </button>
            </p>
            <div class="collapse" id="result-dropdown-@Model.Index" data-question-index="@Model.Index">
                Lade Ergebnisse...
            </div>
        }
    </div>
</div>