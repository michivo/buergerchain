@using Newtonsoft.Json
@model FreieWahl.Models.Voting.VoteModel

<nav class="navbar navbar-dark fixed-top navbar-expand-md">
    <a class="navbar-brand" href="@Url.Action("Index", "Home")">
        <span id="fw-brand-1">freie</span><span id="fw-brand-2">Wahl</span>
    </a>
</nav>
<div class="container-fluid fw-banner py-3">
    <div class="row justify-content-between">
        <div class="col-12 col-md-auto pl-0 py-3">
            <div class="bg-primary px-5 text-light display-4">
                @Model.VotingTitle
            </div>
            <div class="container pt-3">
                <div class="row justify-content-between">
                    <div style="max-width: 30rem;">
                        <div class="p-0">
                            <div class="bg-light text-primary px-3 mr-3 small">
                                @Model.VotingDescription
                            </div>
                        </div>
                    </div>
                    <div class="d-flex flex-column justify-content-between">
                        <div class="bg-light text-primary d-flex flex-row align-items-center" style="font-size:1.5rem;font-weight:100">
                            <div><i class="material-icons text-primary mx-2" style="font-size: 3rem;">date_range</i></div>
                            <div class="px-2">Start: @Model.StartDate<br />Ende: @Model.EndDate</div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="col-12 col-md-auto">
            @if (!string.IsNullOrEmpty(Model.ImageData.ToString()))
            {
                <img src="@Model.ImageData" style="max-height: 13rem;" />
            }
            else
            {
                <i class="material-icons fw-voting-img" id="fw-voting-img-dummy">how_to_vote</i>
            }
        </div>
    </div>
</div>


<div class="container" id="passwordEntry">
    Geben Sie Ihr Passwort ein
    <div class="form-group">
        <label for="voterPassword">Passwort</label>
        <input type="password" class="form-control" id="voterPassword" name="password" placeholder="Password">
    </div>
    <button class="btn btn-primary" onclick="getTokens()">OK</button>
</div>

<div class="container" id="votingQuestions">

</div>

@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.6.1/Sortable.min.js"></script>
    <script src="~/js/vote.js"></script>

    <script>


        function getTokens() {
            const pwd = $('#voterPassword').val();
            const questionIndices = @Json.Serialize(Model.Questions.Select(x => x.Index).ToArray());
            $.ajax({
                url: '@Model.GetTokensUrl',
                data: { "voterId": '@Model.VoterId', "password": pwd, "questionIndices": questionIndices },
                type: 'POST',
                datatype: 'json',
                success: function(data) {
                    loadQuestions(data);
                },
                error: function(x) {
                    alert(JSON.stringify(x));
                    // error: todo
                }
            });
        }

        function loadQuestions(data) {
            const tokens = data.tokens.map(x => x.token);
            $('#passwordEntry').hide();
            $('#votingQuestions').load('GetQuestions',
                {
                    'tokens': tokens,
                    'votingId': '@Model.VotingId',
                    'voterId': '@Model.VoterId'
                },
                function() {
                    setupQuestions();
                });
        }

        function setupQuestions() {
            $('.ordering-question-list').each(function(index, elem) {
                const id = $(elem).attr('id');
                const startIdx = id.indexOf('-', id);
                const endIdx = id.lastIndexOf('-', id);
                const questionidx = id.substr(startIdx + 1, endIdx - startIdx - 1);
                setupOrderingQuestion(questionidx);
            });
        }

    </script>
}